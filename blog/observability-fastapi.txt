1:"$Sreact.fragment"
2:I[7780,["874","static/chunks/874-5999f236430ab1aa.js","177","static/chunks/app/layout-2f3f145be7e2db26.js"],"ThemeProvider"]
3:I[843,["874","static/chunks/874-5999f236430ab1aa.js","177","static/chunks/app/layout-2f3f145be7e2db26.js"],"default"]
4:I[7555,[],""]
5:I[1295,[],""]
6:I[6874,["874","static/chunks/874-5999f236430ab1aa.js","953","static/chunks/app/blog/%5Bslug%5D/page-c5d061a3aa39f75d.js"],""]
8:I[9665,[],"OutletBoundary"]
b:I[9665,[],"ViewportBoundary"]
d:I[9665,[],"MetadataBoundary"]
f:I[6614,[],""]
:HL["/developer-blog/_next/static/media/bb3ef058b751a6ad-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/developer-blog/_next/static/media/e4af272ccee01ff0-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/developer-blog/_next/static/css/926cbcbcdbd5ce65.css","style"]
:HL["/developer-blog/_next/static/css/7bc6e01b3a2a92eb.css","style"]
0:{"P":null,"b":"8X1loMCMkW70aLCxSSIXj","p":"/developer-blog","c":["","blog","observability-fastapi"],"i":false,"f":[[["",{"children":["blog",{"children":[["slug","observability-fastapi","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/developer-blog/_next/static/css/926cbcbcdbd5ce65.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/developer-blog/_next/static/css/7bc6e01b3a2a92eb.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","className":"__variable_ef0e6f __variable_fbd2d1","suppressHydrationWarning":true,"children":["$","body",null,{"className":"font-sans bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-gray-100","children":["$","$L2",null,{"attribute":"class","defaultTheme":"dark","enableSystem":true,"children":[["$","$L3",null,{}],["$","main",null,{"className":"min-h-screen","children":["$","$L4",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}],["$","footer",null,{"className":"bg-gray-50 dark:bg-gray-900 border-t border-gray-200 dark:border-gray-800","children":["$","div",null,{"className":"max-w-5xl mx-auto px-6 py-12","children":["$","div",null,{"className":"grid md:grid-cols-3 gap-8","children":[["$","div",null,{"children":[["$","$L6",null,{"href":"/","className":"text-xl font-bold text-gray-900 dark:text-white mb-4 inline-block","children":"Juan Rodriguez Monti"}],["$","p",null,{"className":"text-gray-600 dark:text-gray-400 text-sm","children":"Software Engineering Manager with 20+ years leading high-impact teams, cloud architecture, and scalable systems. Currently at RELP managing 10 engineers."}]]}],["$","div",null,{"children":[["$","h3",null,{"className":"font-bold mb-4","children":"Links"}],["$","ul",null,{"className":"space-y-2","children":[["$","li",null,{"children":["$","$L6",null,{"href":"/","className":"text-gray-600 dark:text-gray-400 hover:text-red-600 dark:hover:text-red-400 transition-colors text-sm","children":"Home"}]}],["$","li",null,{"children":["$","$L6",null,{"href":"/blog","className":"text-gray-600 dark:text-gray-400 hover:text-red-600 dark:hover:text-red-400 transition-colors text-sm","children":"Writing"}]}],["$","li",null,{"children":["$","$L6",null,{"href":"/talks","className":"text-gray-600 dark:text-gray-400 hover:text-red-600 dark:hover:text-red-400 transition-colors text-sm","children":"Speaking"}]}],["$","li",null,{"children":["$","$L6",null,{"href":"/about","className":"text-gray-600 dark:text-gray-400 hover:text-red-600 dark:hover:text-red-400 transition-colors text-sm","children":"About"}]}]]}]]}],["$","div",null,{"children":[["$","h3",null,{"className":"font-bold mb-4","children":"Connect"}],["$","div",null,{"className":"flex items-center space-x-4","children":[["$","a",null,{"href":"https://github.com/juanrodriguezmonti","target":"_blank","rel":"noopener noreferrer","className":"text-gray-600 dark:text-gray-400 hover:text-red-600 dark:hover:text-red-400 transition-colors","aria-label":"GitHub","children":["$","svg",null,{"ref":"$undefined","xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-github w-5 h-5","children":[["$","path","tonef",{"d":"M15 22v-4a4.8 4.8 0 0 0-1-3.5c3 0 6-2 6-5.5.08-1.25-.27-2.48-1-3.5.28-1.15.28-2.35 0-3.5 0 0-1 0-3 1.5-2.64-.5-5.36-.5-8 0C6 2 5 2 5 2c-.3 1.15-.3 2.35 0 3.5A5.403 5.403 0 0 0 4 9c0 3.5 3 5.5 6 5.5-.39.49-.68 1.05-.85 1.65-.17.6-.22 1.23-.15 1.85v4"}],["$","path","9comsn",{"d":"M9 18c-4.51 2-5-2-7-2"}],"$undefined"]}]}],["$","a",null,{"href":"https://linkedin.com/in/juanrodriguezmonti","target":"_blank","rel":"noopener noreferrer","className":"text-gray-600 dark:text-gray-400 hover:text-red-600 dark:hover:text-red-400 transition-colors","aria-label":"LinkedIn","children":["$","svg",null,{"ref":"$undefined","xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-linkedin w-5 h-5","children":[["$","path","c2jq9f",{"d":"M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"}],["$","rect","mk3on5",{"width":"4","height":"12","x":"2","y":"9"}],["$","circle","bt5ra8",{"cx":"4","cy":"4","r":"2"}],"$undefined"]}]}],["$","a",null,{"href":"mailto:juan@example.com","className":"text-gray-600 dark:text-gray-400 hover:text-red-600 dark:hover:text-red-400 transition-colors","aria-label":"Email","children":["$","svg",null,{"ref":"$undefined","xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-mail w-5 h-5","children":[["$","rect","18n3k1",{"width":"20","height":"16","x":"2","y":"4","rx":"2"}],["$","path","1ocrg3",{"d":"m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7"}],"$undefined"]}]}]]}],["$","p",null,{"className":"text-gray-500 dark:text-gray-500 text-sm mt-4","children":["Â© ",2025," Juan Rodriguez Monti"]}]]}]]}]}]}]]}]}]}]]}],{"children":["blog",["$","$1","c",{"children":[null,["$","$L4",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["slug","observability-fastapi","d"],["$","$1","c",{"children":[null,["$","$L4",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L7","$undefined",null,["$","$L8",null,{"children":["$L9","$La",null]}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","f7I5_HA6VSTYJkIcClDAP",{"children":[["$","$Lb",null,{"children":"$Lc"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}],["$","$Ld",null,{"children":"$Le"}]]}],false]],"m":"$undefined","G":["$f","$undefined"],"s":false,"S":true}
10:T875,prose prose-lg dark:prose-invert max-w-none bg-white dark:bg-gray-800 rounded-xl shadow-sm p-8 border border-red-100 dark:border-red-900/30 prose-headings:text-gray-900 dark:prose-headings:text-white prose-headings:font-bold prose-p:text-gray-700 dark:prose-p:text-gray-300 prose-p:leading-relaxed prose-a:text-red-600 hover:prose-a:text-red-700 dark:prose-a:text-red-400 dark:hover:prose-a:text-red-300 prose-strong:text-gray-900 dark:prose-strong:text-white prose-code:text-red-600 dark:prose-code:text-red-400 prose-code:bg-red-50 dark:prose-code:bg-red-900/10 prose-code:rounded-md prose-code:px-1.5 prose-code:py-0.5 prose-code:text-sm prose-code:before:content-none prose-code:after:content-none prose-pre:bg-[#0d1117] dark:prose-pre:bg-[#0d1117] prose-pre:border-0 prose-pre:shadow-lg prose-pre:p-0 prose-pre:my-8 [&_pre]:!bg-[#0d1117] [&_pre]:overflow-x-auto [&_pre]:scrollbar-thin [&_pre]:scrollbar-thumb-gray-700 [&_pre]:scrollbar-track-gray-900 [&_pre_code]:!text-gray-200 dark:[&_pre_code]:!text-gray-200 [&_pre_code]:!bg-transparent [&_pre_code]:p-6 [&_pre_code]:block [&_pre]:relative [&_pre]:before:absolute [&_pre]:before:top-3 [&_pre]:before:right-6 [&_pre]:before:px-3 [&_pre]:before:py-1.5 [&_pre]:before:text-xs [&_pre]:before:font-mono [&_pre]:before:text-gray-400 [&_pre]:before:bg-gray-800/50 [&_pre]:before:rounded-md [&_pre]:before:content-[attr(data-language)] [&_pre_.line--highlighted]:bg-gray-800/50 [&_pre_.line--highlighted]:shadow-[2px_0_0_0_#f43f5e_inset] [&_pre_.word--highlighted]:bg-gray-800/50 [&_pre_.word--highlighted]:rounded [&_pre>code]:counter-reset-[line] [&_pre>code_._]:before:text-gray-500 [&_pre>code_._]:before:mr-6 [&_pre>code_._]:before:inline-block [&_pre>code_._]:before:w-4 [&_pre>code_._]:before:text-right prose-blockquote:border-red-500 prose-blockquote:bg-red-50 dark:prose-blockquote:bg-red-900/10 prose-blockquote:py-1 prose-blockquote:text-gray-700 dark:prose-blockquote:text-gray-300 prose-li:text-gray-700 dark:prose-li:text-gray-300 prose-img:rounded-xl prose-img:shadow-sm prose-img:border prose-img:border-red-100 dark:prose-img:border-red-900/30 prose-p:my-4 prose-headings:mt-8 prose-headings:mb-47:["$","div",null,{"className":"max-w-6xl mx-auto px-6 py-16","children":[["$","$L6",null,{"href":"/blog","className":"inline-flex items-center gap-2 text-red-600 dark:text-red-400 hover:text-red-700 dark:hover:text-red-300 mb-8","children":[["$","svg",null,{"ref":"$undefined","xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-arrow-left w-4 h-4","children":[["$","path","1l729n",{"d":"m12 19-7-7 7-7"}],["$","path","x3x0zl",{"d":"M19 12H5"}],"$undefined"]}],"Back to all articles"]}],["$","article",null,{"children":[["$","header",null,{"className":"mb-12","children":[["$","h1",null,{"className":"text-4xl font-bold mb-6 leading-tight text-gray-900 dark:text-white","children":"Implementing Observability in FastAPI Applications"}],["$","div",null,{"className":"flex flex-wrap items-center gap-6 text-gray-600 dark:text-gray-400 text-sm mb-8","children":[["$","time",null,{"dateTime":"2025-01-24","className":"flex items-center gap-2","children":[["$","svg",null,{"ref":"$undefined","xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-clock w-4 h-4","children":[["$","circle","1mglay",{"cx":"12","cy":"12","r":"10"}],["$","polyline","68esgv",{"points":"12 6 12 12 16 14"}],"$undefined"]}],"January 23, 2025"]}],["$","span",null,{"className":"flex items-center gap-2","children":[["$","svg",null,{"ref":"$undefined","xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-clock w-4 h-4","children":[["$","circle","1mglay",{"cx":"12","cy":"12","r":"10"}],["$","polyline","68esgv",{"points":"12 6 12 12 16 14"}],"$undefined"]}],"4 min read"]}]]}],"$undefined"]}],["$","div",null,{"className":"prose prose-lg dark:prose-invert max-w-none","children":["$","article",null,{"className":"$10","children":"$L11"}]}],["$","footer",null,{"className":"mt-16","children":["$","div",null,{"className":"bg-white dark:bg-gray-800 rounded-xl shadow-sm p-8 border border-red-100 dark:border-red-900/30","children":[["$","h3",null,{"className":"text-xl font-bold mb-4 text-gray-900 dark:text-white","children":"About the Author"}],["$","p",null,{"className":"text-gray-700 dark:text-gray-300 mb-4","children":"Juan Rodriguez Monti is a Senior Backend Software Developer and University Professor specializing in Python, Algorithms, Machine Learning, and Data Structures. He loves coding, teaching, and sharing knowledge with the developer community."}],["$","$L6",null,{"href":"/about","className":"text-red-600 dark:text-red-400 hover:text-red-700 dark:hover:text-red-300 inline-flex items-center gap-2","children":["More about Juan",["$","svg",null,{"ref":"$undefined","xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-arrow-left w-4 h-4 rotate-180","children":[["$","path","1l729n",{"d":"m12 19-7-7 7-7"}],["$","path","x3x0zl",{"d":"M19 12H5"}],"$undefined"]}]]}]]}]}]]}]]}]
12:T52c,import structlog
from typing import Optional

# Configure structlog
structlog.configure(
    processors=[
        structlog.processors.TimeStamper(fmt="iso"),
        structlog.processors.JSONRenderer()
    ]
)

logger = structlog.get_logger()

class LoggingMiddleware:
    async def __call__(
        self,
        request: Request,
        call_next: RequestResponseEndpoint
    ) -> Response:
        start_time = time.time()
        
        # Extract request details
        request_id = request.headers.get("X-Request-ID")
        if not request_id:
            request_id = str(uuid.uuid4())
        
        # Bind context
        log = logger.bind(
            request_id=request_id,
            method=request.method,
            path=request.url.path,
            client_ip=request.client.host
        )
        
        try:
            response = await call_next(request)
            duration = time.time() - start_time
            
            log.info(
                "request_processed",
                status_code=response.status_code,
                duration=duration
            )
            
            return response
        except Exception as e:
            log.error(
                "request_failed",
                error=str(e),
                exc_info=True
            )
            raise
13:T50d,from typing import Dict, Any

class HealthCheck:
    async def check_database(self) -> Dict[str, Any]:
        try:
            await db.execute("SELECT 1")
            return {
                "database": {
                    "status": "healthy",
                    "latency_ms": await self.measure_db_latency()
                }
            }
        except Exception as e:
            return {
                "database": {
                    "status": "unhealthy",
                    "error": str(e)
                }
            }
    
    async def check_redis(self) -> Dict[str, Any]:
        try:
            await redis.ping()
            return {
                "redis": {
                    "status": "healthy",
                    "connected_clients": await redis.info("clients")
                }
            }
        except Exception as e:
            return {
                "redis": {
                    "status": "unhealthy",
                    "error": str(e)
                }
            }

@app.get("/health")
async def health_check():
    checker = HealthCheck()
    return {
        "status": "healthy",
        "checks": {
            **(await checker.check_database()),
            **(await checker.check_redis())
        },
        "version": "1.0.0"
    }
11:[["$","h1",null,{"children":"Implementing Observability in FastAPI Applications"}],"\n",["$","p",null,{"children":"Modern applications require robust observability to understand their behavior, performance, and health. Let's explore how to implement comprehensive observability in FastAPI applications."}],"\n",["$","h2",null,{"children":"The Three Pillars of Observability"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":[["$","strong",null,{"children":"Metrics"}],": Quantitative measurements over time"]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"Traces"}],": Request flow through your system"]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"Logs"}],": Detailed event records"]}],"\n"]}],"\n",["$","h2",null,{"children":"Setting Up OpenTelemetry"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-python","children":"from opentelemetry import trace\nfrom opentelemetry.exporter.otlp.proto.grpc.trace_exporter import OTLPSpanExporter\nfrom opentelemetry.instrumentation.fastapi import FastAPIInstrumentor\nfrom opentelemetry.sdk.trace import TracerProvider\nfrom opentelemetry.sdk.trace.export import BatchSpanProcessor\n\ndef setup_telemetry():\n    # Set up the tracer\n    tracer_provider = TracerProvider()\n    trace.set_tracer_provider(tracer_provider)\n    \n    # Configure the OTLP exporter\n    otlp_exporter = OTLPSpanExporter(\n        endpoint=\"http://jaeger:4317\",\n        insecure=True\n    )\n    \n    # Add span processor\n    span_processor = BatchSpanProcessor(otlp_exporter)\n    tracer_provider.add_span_processor(span_processor)\n    \n    return tracer_provider\n\n# Initialize FastAPI with OpenTelemetry\napp = FastAPI()\nFastAPIInstrumentor.instrument_app(app)\n"}]}],"\n",["$","h2",null,{"children":"Prometheus Metrics Integration"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-python","children":"from prometheus_client import Counter, Histogram\nfrom prometheus_fastapi_instrumentator import Instrumentator\n\n# Define metrics\nREQUEST_COUNT = Counter(\n    \"http_requests_total\",\n    \"Total HTTP requests\",\n    [\"method\", \"endpoint\", \"status\"]\n)\n\nREQUEST_LATENCY = Histogram(\n    \"http_request_duration_seconds\",\n    \"HTTP request latency\",\n    [\"method\", \"endpoint\"]\n)\n\n# Set up Prometheus instrumentation\ndef setup_prometheus():\n    Instrumentator().instrument(app).expose(app)\n\n@app.middleware(\"http\")\nasync def track_requests(request: Request, call_next):\n    start_time = time.time()\n    response = await call_next(request)\n    duration = time.time() - start_time\n    \n    REQUEST_COUNT.labels(\n        method=request.method,\n        endpoint=request.url.path,\n        status=response.status_code\n    ).inc()\n    \n    REQUEST_LATENCY.labels(\n        method=request.method,\n        endpoint=request.url.path\n    ).observe(duration)\n    \n    return response\n"}]}],"\n",["$","h2",null,{"children":"Structured Logging"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-python","children":"$12"}]}],"\n",["$","h2",null,{"children":"Custom Business Metrics"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-python","children":"from prometheus_client import Counter, Gauge\n\n# Business metrics\nACTIVE_USERS = Gauge(\n    \"active_users_total\",\n    \"Number of active users\"\n)\n\nORDER_VALUE = Counter(\n    \"order_value_total\",\n    \"Total value of orders\",\n    [\"product_category\"]\n)\n\nclass MetricsService:\n    def track_user_activity(self, user_id: str):\n        ACTIVE_USERS.inc()\n        \n    def track_order(self, category: str, value: float):\n        ORDER_VALUE.labels(\n            product_category=category\n        ).inc(value)\n"}]}],"\n",["$","h2",null,{"children":"Health Checks"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-python","children":"$13"}]}],"\n",["$","h2",null,{"children":"Tracing Database Queries"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-python","children":"from opentelemetry import trace\nfrom sqlalchemy import event\nfrom sqlalchemy.engine import Engine\n\ntracer = trace.get_tracer(__name__)\n\n@event.listens_for(Engine, \"before_cursor_execute\")\ndef before_cursor_execute(\n    conn, \n    cursor, \n    statement, \n    parameters, \n    context, \n    executemany\n):\n    with tracer.start_as_current_span(\n        \"database_query\",\n        attributes={\n            \"db.statement\": statement,\n            \"db.parameters\": str(parameters)\n        }\n    ) as span:\n        return\n"}]}],"\n",["$","h2",null,{"children":"Grafana Dashboard Configuration"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-json","children":"{\n  \"dashboard\": {\n    \"title\": \"FastAPI Application Metrics\",\n    \"panels\": [\n      {\n        \"title\": \"Request Rate\",\n        \"type\": \"graph\",\n        \"targets\": [\n          {\n            \"expr\": \"rate(http_requests_total[5m])\",\n            \"legendFormat\": \"{{method}} {{endpoint}}\"\n          }\n        ]\n      },\n      {\n        \"title\": \"Response Latency\",\n        \"type\": \"heatmap\",\n        \"targets\": [\n          {\n            \"expr\": \"rate(http_request_duration_seconds_bucket[5m])\",\n            \"format\": \"heatmap\"\n          }\n        ]\n      },\n      {\n        \"title\": \"Active Users\",\n        \"type\": \"stat\",\n        \"targets\": [\n          {\n            \"expr\": \"active_users_total\"\n          }\n        ]\n      }\n    ]\n  }\n}\n"}]}],"\n",["$","h2",null,{"children":"Docker Compose Setup"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-yaml","children":"version: '3.8'\n\nservices:\n  app:\n    build: .\n    ports:\n      - \"8000:8000\"\n    environment:\n      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317\n    depends_on:\n      - jaeger\n      - prometheus\n  \n  jaeger:\n    image: jaegertracing/all-in-one:latest\n    ports:\n      - \"16686:16686\"\n      - \"4317:4317\"\n  \n  prometheus:\n    image: prom/prometheus:latest\n    ports:\n      - \"9090:9090\"\n    volumes:\n      - ./prometheus.yml:/etc/prometheus/prometheus.yml\n  \n  grafana:\n    image: grafana/grafana:latest\n    ports:\n      - \"3000:3000\"\n    environment:\n      - GF_SECURITY_ADMIN_PASSWORD=admin\n    volumes:\n      - grafana_data:/var/lib/grafana\n\nvolumes:\n  grafana_data:\n"}]}],"\n",["$","h2",null,{"children":"Best Practices"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":[["$","strong",null,{"children":"Consistent Naming"}],": Use consistent naming conventions for metrics, traces, and logs"]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"Cardinality Control"}],": Be careful with high-cardinality labels in metrics"]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"Sampling"}],": Implement appropriate sampling for traces in high-traffic systems"]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"Context Propagation"}],": Ensure proper context propagation across service boundaries"]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"Alert Configuration"}],": Set up meaningful alerts based on SLOs"]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"Documentation"}],": Document the meaning and purpose of each metric and log field"]}],"\n"]}],"\n",["$","h2",null,{"children":"Conclusion"}],"\n",["$","p",null,{"children":"A well-implemented observability stack is crucial for maintaining and troubleshooting modern applications. Key takeaways:"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Use OpenTelemetry for distributed tracing"}],"\n",["$","li",null,{"children":"Implement Prometheus metrics for monitoring"}],"\n",["$","li",null,{"children":"Set up structured logging"}],"\n",["$","li",null,{"children":"Configure comprehensive health checks"}],"\n",["$","li",null,{"children":"Use Grafana for visualization"}],"\n",["$","li",null,{"children":"Follow best practices for maintainability"}],"\n"]}],"\n",["$","p",null,{"children":"Remember that observability is not just about collecting dataâit's about making that data actionable and useful for understanding your system's behavior."}]]
c:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
9:null
a:null
e:[["$","title","0",{"children":"Implementing Observability in FastAPI Applications | Juan Rodriguez Monti"}],["$","meta","1",{"name":"author","content":"Juan Rodriguez Monti"}],["$","meta","2",{"name":"generator","content":"v0.dev"}],["$","meta","3",{"name":"keywords","content":"Engineering Leadership,Cloud Architecture,AWS,FastAPI,Python,Team Management,Software Engineering Manager"}],["$","meta","4",{"property":"og:title","content":"Implementing Observability in FastAPI Applications"}],["$","meta","5",{"property":"og:type","content":"article"}],["$","meta","6",{"property":"article:published_time","content":"2025-01-24"}],["$","meta","7",{"property":"article:author","content":"Juan Rodriguez Monti"}],["$","meta","8",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","9",{"name":"twitter:title","content":"Implementing Observability in FastAPI Applications"}]]
